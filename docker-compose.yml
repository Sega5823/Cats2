version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#    networks:
#      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    networks:
#      - kafka-network
    depends_on:
      - zookeeper


  cat-bd:
    image: postgres:latest
    container_name: "cats_bd"
    volumes:
      - postgres_data:/var/lib/postgresql/catsdata
    environment:
      POSTGRES_DB: Cats
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 5823
    ports:
      - "5432:5432"
#    networks:
#      - kafka-network

  cat-service:
    build:
      context: ./Cats/
      dockerfile: Dockerfile
    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://users_bd:5432/cats
      SPRING_DATASOURCE_URL: jdbc:postgresql://cats_bd:5432/Cats
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 5823
    depends_on:
#      - user-bd
      - cat-bd
      - kafka
    ports:
      - "8080-8080"
#    networks:
#      - kafka-network

  user-bd:
    image: postgres:latest
    container_name: "users_bd"
    volumes:
      - postgres_data:/var/lib/postgresql/usersdata
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 5823
    ports:
      - "5434:5432"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"

  #    networks:
#      - kafka-network




  user-service:
    container_name: "user_service"
    build:
      context: ./GateWay/
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://users_bd:5432/users
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 5823
    depends_on:
      - user-bd
      - kafka
    ports:
      - "8082-8082"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    networks:
#      - kafka-network

#http://172.18.0.7:8082/
#http://172.18.0.1/
#http://localhost:8082/

#networks:
#  kafka-network:
#    driver: bridge

volumes:
  postgres_data:


#  app:
#    build: .
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/CatsDB
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: 5823
#    depends_on:
#      - db
#    networks:
#      - app-network

#  owner-bd:
#    image: postgres:latest
#    container_name: "owners_bd"
#    volumes:
#      - postgres_data:/var/lib/postgresql/ownersdata
#    environment:
#      POSTGRES_DB: Owners
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 5823
#    ports:
#      - "5433:5432"
#
#  owner-service:
#    build:
#      context: ./Owners/
#      dockerfile: Dockerfile
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://owners_bd:5432/Owners
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: 5823
#    depends_on:
#      - owner-bd
#      - kafka
#    ports:
#      - "8081-8081"
#    networks:
#      - kafka-network