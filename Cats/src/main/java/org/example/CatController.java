package org.example;import entity.Cat;import entity.CatDTO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.Date;import java.util.List;@RestController@RequestMapping("/api/cats")public class CatController {    @Autowired    private CatService catService;    @GetMapping("/getCatByID")    public CatDTO findCatByID(@RequestParam int id    //        ,@RequestParam int userId    ){        CatDTO cat = catService.findCatByID(id);        //if (userId == cat.getOwnerID()){            return cat;        //}        //return null;        //return catService.findCatByID(id).get();    }    //http://localhost:8080/api/users/getCatByID?id=1    //http://localhost:8080/api/cats/getCatByID?id=1    //@PostMapping("/add{name, breed, color, date, ownerID}")    @PostMapping("/insertCat")    public ResponseEntity<String> insertCat(@ModelAttribute Cat cat,@RequestParam int userId){        cat.setOwner_id(userId);        catService.insertCat(cat);        return ResponseEntity.status(HttpStatus.CREATED).body("Cat created");        //.body(cat.getCatID());    }    @PostMapping("/admin/insertCat")    public ResponseEntity<Integer> insertCat(@RequestParam String name, @RequestParam String breed, @RequestParam String color, @RequestParam Date date, @RequestParam int userId){        Cat cat = new Cat(name, breed, color, date, userId);        catService.insertCat(cat);        return ResponseEntity.status(HttpStatus.CREATED).body(cat.getCatID());    }    @PostMapping("/deleteCat/{id}")    public void deleteCat(@PathVariable int id, @RequestParam int userId){        CatDTO cat = catService.findCatByID(id);        if (userId == cat.getOwnerID()){            catService.deleteCat(id);        }    }//    @PostMapping("/addFriend")//    public void addFriend(@RequestParam int cat, @RequestParam int cat2){//        catService.addFriend(cat, cat2);//    }    @GetMapping("/findAllCats")    public List<CatDTO> findAllCats(@RequestParam int ownerId){        List<CatDTO> catDTOArrayList = catService.findAll(ownerId);        return catDTOArrayList;    }//    @GetMapping("/getCats")//    public String findCatByID(Model model, int userId){//        ArrayList<Cat> cats = catService.findAll();//        int userId = userId;//        ArrayList<CatDTO> catDTOS =//                new ArrayList<>(cats.stream().filter((x)-> x.getOwner_id() == userId)//                        .map(cat -> new CatDTO(cat.getName(), cat.getBreed(), cat.getColor(), cat.getDate(), cat.getCatID(), cat.getOwner_id())).toList());//        if (!catDTOS.isEmpty()){//            model.addAttribute("cats", catDTOS);//            return "AllCats";//        }//        return "ErrorLink";//    }    //http://localhost:8080/api/cats/getCats}